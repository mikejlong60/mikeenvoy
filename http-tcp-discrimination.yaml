admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901

node:
  id: local
  cluster: demo

static_resources:
  listeners:
    - name: mixed_plain_80
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 80

      # Detect HTTP traffic on plaintext connections
      listener_filters:
        - name: envoy.filters.listener.http_inspector
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.listener.http_inspector.v3.HttpInspector

      filter_chains:
        # ---- HTTP chain (for detected HTTP/1.x or h2c)
        - name: http_chain
          filter_chain_match:
            application_protocols: ["http/1.1", "http/1.0", "h2c"]
          filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: all
                      domains: ["*"]
                      routes:
                        # /endpoint1/foo  -> nginx1 (http_backend1)
                        - match:
                            prefix: "/endpoint1/foo"
                          route:
                            cluster: http_backend1
                            prefix_rewrite: "/"
                          request_headers_to_add:
                            - header:
                                key: x-route-header
                                value: new-value

                        # /endpoint1/bar -> nginx2 (http_backend2)
                        - match:
                            prefix: "/endpoint1/bar"
                          route:
                            cluster: http_backend2
                            prefix_rewrite: "/"
                          request_headers_to_add:
                            - header:
                                key: x-route-header
                                value: new-value

                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

        # ---- Fallback TCP chain (non-HTTP traffic)
        - name: tcp_chain
          filters:
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                stat_prefix: tcp_passthrough
                cluster: tcp_backend

  clusters:
    # Upstream for HTTP (nginx)
    - name: http_backend1
      type: STRICT_DNS
      connect_timeout: 1s
      load_assignment:
        cluster_name: http_backend1
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: nginx1
                      port_value: 8080

    # Upstream for HTTP (nginx)
    - name: http_backend2
      type: STRICT_DNS
      connect_timeout: 1s
      load_assignment:
        cluster_name: http_backend2
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: nginx2
                      port_value: 8081

    # Upstream for non-HTTP TCP echo service
    - name: tcp_backend
      type: STRICT_DNS
      connect_timeout: 1s
      load_assignment:
        cluster_name: tcp_backend
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: tcp-service
                      port_value: 9000
